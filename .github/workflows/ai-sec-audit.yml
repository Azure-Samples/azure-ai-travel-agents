name: Security Audit (o3 deep research)

on:
  workflow_dispatch:
  pull_request:
    paths: 
    - "**/*.py"
    - "**/*.js"
    - "**/*.ts"
    - "**/*.java"
    - "**/*.cs" 
    - "**/*.bicep"
    - "**/*.yml"
    - "**/*.yaml"
    - "**/*.json"


permissions:
  contents: read
  pull-requests: write # so we can comment on PRs
  models: read # <--- needed to call GitHub Models :contentReference[oaicite:0]{index=0}

jobs:
  audit:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️  Checkout repo
        uses: actions/checkout@v4

      - name: 📝  Build audit prompt
        run: |
          cat > prompt.txt <<'EOF'
          You are an experienced cloud-security engineer with deep knowledge of Azure, DevSecOps, and secure software design.
          Task: Perform a full security audit of the GitHub repository https://github.com/${{ github.repository }}.
          
          Scope to cover:
          1-Source-code vulnerabilities - input validation, secrets, insecure API usage, error handling.
          2-Dependency risks - outdated or vulnerable libraries (direct & transitive).
          3-Configuration and secrets management - hard-coded credentials, Key Vault/ENV usage, IaC misconfigs.
          4-Identity & access control (IAM) - GitHub Actions permissions, Azure roles, service principals, workflow secrets.
          5-Cloud posture - network exposure, HTTPS enforcement, logging, private endpoints, managed identity usage.
          6-Best-practice alignment - OWASP Top 10, NIST, Azure Well-Architected Framework.
          
          Deliverable (Markdown):
          * Introduction (what you audited & methodology).
          * Detailed Findings under each scope area.
          * Key-findings table with columns: Severity · Issue · File/Location · Recommendation.
          * Conclusion & prioritized action list.
          
          Style:
          * Clear headings, concise bullets, code snippets where helpful.
          * Severity levels: High / Medium / Low.
          * Use a landscape-friendly table for key findings.
          * Output only the report — no extraneous commentary.
          EOF

      - name: 🤖  Call Model o3
        id: call-model
        env:
          AUDIT_GITHUB_TOKEN: ${{ secrets.AUDIT_GITHUB_TOKEN }}
        run: |
          curl -s -w "%{http_code}" -o response.json -X POST "https://models.github.ai/inference/chat/completions" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $AUDIT_GITHUB_TOKEN" \
            -d '{
              "model": "openai/o3",
              "messages": [
                { "role": "system",
                  "content": "You are a senior cloud-security auditor producing structured markdown." },
                { "role": "user",
                  "content": "You are an experienced cloud-security engineer with deep knowledge of Azure, DevSecOps, and secure software design.
                    Task: Perform a full security audit of the GitHub repository https://github.com/roryp/azure-ai-travel-agents.
                    Scope to cover
                    Source-code vulnerabilities - input validation, secrets, insecure API usage, error handling.
                    Dependency risks - outdated or vulnerable libraries (direct & transitive).
                    Configuration and secrets management - hard-coded credentials, Key Vault/ENV usage, IaC misconfigs.
                    Identity & access control (IAM) - GitHub Actions permissions, Azure roles, service principals, workflow secrets.
                    Cloud posture - network exposure, HTTPS enforcement, logging, private endpoints, managed identity usage.
                    Best-practice alignment - OWASP Top 10, NIST, Azure Well-Architected Framework.
                    Deliverable (Markdown):
                    Introduction (what you audited & methodology).
                    Detailed Findings under each scope area.
                    Key-findings table with columns: Severity · Issue · File/Location · Recommendation.
                    Conclusion & prioritized action list.
                    Style:
                    Clear headings, concise bullets, code snippets where helpful.
                    Severity levels: High / Medium / Low.
                    Use a landscape-friendly table for key findings.
                    Output only the report — no extraneous commentary." 
                }
              ]
            }'

      - name: 📄  Extract markdown report
        run: |
          jq -r '.choices[0].message.content' response.json > security-audit.md
          echo "Report saved to security-audit.md"

      - name: 📦  Upload as artifact
        uses: actions/upload-artifact@v4
        with:
          name: security-audit
          path: security-audit.md

      - name: 💬  Comment on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          path: security-audit.md
